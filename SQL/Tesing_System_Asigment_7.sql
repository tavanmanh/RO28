-- CÂU 1
DROP TRIGGER IF EXISTS TRIG_INSER_GR;
DELIMITER $$
 CREATE TRIGGER TRIG_INSER_GR
 BEFORE INSERT ON `Group`
 FOR EACH ROW
BEGIN
	IF (NEW.CreateDate <= DATE_SUB(NOW(), interval 1 year)) THEN
	SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'KHÔNG THỂ TẠO GR';
	END IF;
END$$
 DELIMITER ;
INSERT INTO `Group`(GroupName,CreatorID,CreateDate)
VALUES ('100', '10', '2020-11-09');

-- CÂU 2
DROP TRIGGER IF EXISTS TRIG_INSER_SALE;
DELIMITER $$
 CREATE TRIGGER TRIG_INSER_SALE
 BEFORE INSERT ON `Account`
 FOR EACH ROW
BEGIN
	DECLARE dep_ID TINYINT;
	SELECT D.DepartmentID INTO dep_ID FROM `Department` D WHERE D.DepartmentName = 'Sale';
	IF (NEW.DepartmentID = dep_ID) THEN
	SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = '"Department "Sale" cannot add more user"';
	END IF;
END$$
 DELIMITER ;
INSERT INTO `Account`(Email,Username,FullName,DepartmentID,PositionID,CreateDate)
VALUES ('tavanmanh@gmail.com', 'fleta_rutherford1', 'NGYỄN VĂN A', '1', '2','2001-11-09');

-- CÂU 3
DROP TRIGGER IF EXISTS TRIG_GR;
DELIMITER $$
 CREATE TRIGGER TRIG_GR
 BEFORE INSERT ON `GroupAccount`
 FOR EACH ROW
BEGIN
	DECLARE GR_ID TINYINT;
	SELECT COUNT(GR.GroupID) INTO GR_ID FROM `GroupAccount` GR WHERE GR.GroupID = NEW.GroupID;
	IF (GR_ID >= 5) THEN
	SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'ĐÃ ĐỦ 5 THÀNH VIÊN';
	END IF;
END$$
 DELIMITER ;

-- CÂU 4
DROP TRIGGER IF EXISTS TRIG_QUES;
DELIMITER $$
 CREATE TRIGGER TRIG_QUES
 BEFORE INSERT ON `ExamQuestion`
 FOR EACH ROW
BEGIN
	DECLARE EX_QUES TINYINT;
	SELECT COUNT(EX.ExamID) INTO EX_QUES FROM `ExamQuestion` EX WHERE EX.ExamID = NEW.ExamID;
	IF (EX_QUES >= 10) THEN
	SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'ĐÃ ĐỦ 10 CÂU HỎI';
	END IF;
END$$
 DELIMITER ;
 
 -- CÂU 5
 DROP TRIGGER IF EXISTS TRIG_DLT_ADMIN;
DELIMITER $$
 CREATE TRIGGER TRIG_DLT_ADMIN
 BEFORE DELETE ON `Account`
 FOR EACH ROW
BEGIN
	DECLARE EMAIL_ADMIN VARCHAR(50);
	SET EMAIL_ADMIN = 'admin@gmail.com';
	IF (OLD.Email = EMAIL_ADMIN) THEN
    SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'ĐÂY LÀ TK ADMIN KHÔNG ĐƯỢC XÓA';
	END IF;
END$$
 DELIMITER ;
 DELETE FROM account A WHERE A.Email = 'admin@gmail.com';
 
 -- CÂU 6
 DROP TRIGGER IF EXISTS TRIG_INSER_WAITING;
DELIMITER $$
CREATE TRIGGER TRIG_INSER_WAITING
BEFORE INSERT ON `Account`
FOR EACH ROW
BEGIN
	DECLARE DEP_ID_WAITING TINYINT;
	SELECT D.DepartmentID INTO DEP_ID_WAITING FROM `Department` D WHERE D.DepartmentName = 'CHỜ VIỆC';
	IF (NEW.DepartmentID IS NULL) THEN
	SET NEW.DepartmentID=DEP_ID_WAITING;
	END IF;
END$$
 DELIMITER ;
 INSERT INTO `Account`(Email,Username,FullName,PositionID,CreateDate)
VALUES ('1','1', '1', '1','2001-11-09');

 -- CÂU 7
 DROP TRIGGER IF EXISTS TRIG_MAX_QA;
DELIMITER $$
CREATE TRIGGER TRIG_MAX_QA
BEFORE INSERT ON `Answer`
FOR EACH ROW
BEGIN
	DECLARE COUNT_Q TINYINT;
	DECLARE COUNT_A TINYINT;
	SELECT count(A.QuestionID) INTO COUNT_Q FROM `Answer` A WHERE A.QuestionID = NEW.QuestionID;
	SELECT count(1) INTO COUNT_A FROM `Answer` A WHERE A.QuestionID = NEW.QuestionID AND A.isCorrect = NEW.isCorrect;
	IF (COUNT_Q > 4 ) OR (COUNT_A >2) THEN
	SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'NHẬP SAI DỮ LIỆU';
	END IF;
END $$
DELIMITER ;

 -- CÂU 8
DELIMITER $$
CREATE TRIGGER TRIG_GENDER
BEFORE INSERT ON `Account`
FOR EACH ROW
	BEGIN
		IF NEW.Gender = 'Nam' THEN
			SET NEW.Gender = 'M';
		ELSEIF NEW.Gender = 'Nu' THEN
			SET NEW.Gender = 'F';
		ELSEIF NEW.Gender = 'Chưa xác định' THEN
			SET NEW.Gender = 'U';
		END IF ;
	END $$
DELIMITER ;

 INSERT INTO `Account`(Email,Gender,Username,FullName,PositionID,CreateDate,DepartmentID)
VALUES ('2','Nam','2', '2', '2','2001-11-09',2);

 -- CÂU 9
DROP TRIGGER IF EXISTS TRIG_DLT_EXAM;
DELIMITER $$
CREATE TRIGGER TRIG_DLT_EXAM
BEFORE DELETE ON `Exam`
FOR EACH ROW
BEGIN
	DECLARE CR_DATE DATETIME;
	SET CR_DATE = DATE_SUB(NOW(),INTERVAL 2 DAY);
	IF (OLD.CreateDate > CR_DATE) THEN
	SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'KHÔNG THỂ XÓA';
	END IF ;
END $$
DELIMITER ;
DELETE FROM exam E WHERE E.ExamID =1;

 -- CÂU 10
DROP TRIGGER IF EXISTS TRIG_DL;
DELIMITER $$
 CREATE TRIGGER TRIG_DL
 BEFORE DELETE ON `Question`
 FOR EACH ROW
BEGIN
	DECLARE ID_Q INT;
    SELECT count(E.QuestionID) INTO ID_Q FROM `ExamQuestion` E WHERE E.QuestionID = OLD.QuestionID;
	IF (ID_Q = 0) THEN
    SIGNAL SQLSTATE '12345'
	SET MESSAGE_TEXT = 'K TỒN TẠI Q NÀY';
	END IF;
END$$
 DELIMITER ;
 DELETE FROM `Question` Q  WHERE Q.QuestionID = 877;
 -- CÂU 12
SELECT E.*, CASE
	WHEN E.Duration <= 30 THEN 'Short time'
	WHEN E.Duration <= 60 THEN 'Medium time'
	ELSE 'Longtime'
	END AS Duration
FROM `Exam` E;

 -- CÂU 13
 
 SELECT GA.GroupID, COUNT(GA.GroupID), CASE
	WHEN COUNT(GA.GroupID) <= 5 THEN 'few'
	WHEN COUNT(GA.GroupID) <= 20 THEN 'normal'
	ELSE 'higher'
	END AS the_number_user_amount
	FROM groupaccount GA
	GROUP BY GA.GroupID;
   
 -- CÂU 14
SELECT D.DepartmentName, CASE
		WHEN COUNT(A.DepartmentID) = 0 THEN 'Không có User'
		ELSE COUNT(A.DepartmentID)
		END AS SL_USER
	FROM department D
	LEFT JOIN account A ON D.DepartmentID = A.DepartmentID
	GROUP BY D.DepartmentID;
    
    